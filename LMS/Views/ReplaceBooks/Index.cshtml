@model IEnumerable<string>

<body>
    <h1>Sort The Call Numbers In Ascending Order</h1>
    <ul id="sortable-list">
        @foreach (var item in ViewBag.Items)
        {
            <li class="book-boxes" draggable="true">@item</li>
        }
    </ul>

    <button id="submit-button">Check</button>

    <script>
        const list = document.getElementById('sortable-list');

        let draggingElement = null;

        list.addEventListener('dragstart', (e) => {
            draggingElement = e.target;
            e.dataTransfer.setData('text/plain', e.target.textContent);
            e.target.classList.add('dragging');
        });

        list.addEventListener('dragover', (e) => {
            e.preventDefault();
            // Allow items to be dropped between other items
            if (e.target.tagName === 'LI') {
                e.target.classList.add('over');
            }
        });

        list.addEventListener('dragenter', (e) => {
            if (e.target.tagName === 'LI') {
                e.target.classList.add('over');
            }
        });

        list.addEventListener('dragleave', (e) => {
            if (e.target.tagName === 'LI') {
                e.target.classList.remove('over');
            }
        });

        list.addEventListener('drop', (e) => {
            e.preventDefault();
            if (e.target.tagName === 'LI') {
                e.target.classList.remove('over');
                const droppedText = e.dataTransfer.getData('text/plain');

                // Determine the position of the drop target
                const dropTargetIndex = Array.from(list.children).indexOf(e.target);

                // Insert the dragged item before the drop target
                list.insertBefore(draggingElement, list.children[dropTargetIndex]);
            }
        });

        list.addEventListener('dragend', (e) => {
            e.target.classList.remove('dragging');
        });

        const submitButton = document.getElementById('submit-button');

        // Attach the handleSubmit function to the submit button's click event
        submitButton.addEventListener('click', handleSubmit);

        // Define the handleSubmit function
        function handleSubmit() {
            // Get the sorted order of the items
            const sortedItems = Array.from(list.children).map(li => li.textContent);

            console.log('Data to send:', sortedItems);

            // Send the sortedItems to the server using a POST request
            fetch('/ReplaceBooks/SubmitSortedItems', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(sortedItems), // Send the array directly, not as an object
            })
                .then(response => {
                    if (response.ok) {
                        // Handle success, you can show a message to the user if needed
                        console.log('Sorted items submitted successfully');
                    } else {
                        // Handle error, you can show an error message to the user if needed
                        console.error('Error submitting sorted items');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }
    </script>
</body>
